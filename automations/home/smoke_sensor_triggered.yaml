---
alias: ðŸ”¥ Smoke Alarm ðŸ”¥
id: "smoke_sensor_triggered"
mode: restart
triggers:
  - trigger: template
    value_template: >-
      {%- for sensor in states.binary_sensor if (sensor.entity_id).endswith("smoke") and is_state(sensor.entity_id, "on") -%}
        {{ is_state(sensor.entity_id, 'on') }}
      {%- endfor -%}
actions:
  - action: notify.mobile_jorn_maeike_priority_high
    data:
      title: ðŸ”¥ Smoke Alarm ðŸ”¥
      message: |
        {%- for sensor in states.binary_sensor if (sensor.entity_id).endswith("smoke") and is_state(sensor.entity_id, "on") -%}
          {{ sensor.name }}
        {% endfor %}
      data:
        sticky: true
  - action: persistent_notification.create
    data:
      title: ðŸ”¥ Smoke Alarm ðŸ”¥
      message: |
        {%- for sensor in states.binary_sensor if (sensor.entity_id).endswith("smoke") and is_state(sensor.entity_id, "on") -%}
          {{ sensor.name }}
        {% endfor %}
