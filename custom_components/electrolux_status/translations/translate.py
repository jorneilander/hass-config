"""Generation of language files for custom component."""  # noqa: INP001

# As a non-core integration only en.json is generated by
# the home assistant container, use this generated English
# JSON file to translate to the supported language types

# To update translations run the below in terminal
# uv pip install googletrans==4.0.0-rc1
# cd homeassistant/components/electrolux_status/translations
# python translate.py

import json

from googletrans import Translator

with open("en.json", encoding="utf-8") as file:
    en_data = json.load(file)

# Define the target languages
languages = {
    "български": "bg",
    "český": "cs",
    "Dansk": "da",
    "Deutsch": "de",
    "ελληνικός": "el",
    "English": "en",
    "eesti": "et",
    "Soome": "fi",
    "Français": "fr",
    "Hrvatski": "hr",
    "magyar": "hu",
    "Italiano": "it",
    "lettone": "lv",
    "lituano": "lt",
    "Luxembourgish": "lb",
    "nederlands": "nl",
    "Norsk": "no",
    "Polski": "pl",
    "Português": "pt",
    "Română": "ro",
    "rusesc": "ru",
    "slovenský": "sk",
    "slovinský": "sl",
    "Español": "es",
    "Svenska": "sv",
    "Türk": "tr",
    "Ukrayna": "uk",
}

translator = Translator()


def translate_text(text, dest_language):
    """Translate to the destination language."""
    return translator.translate(text, dest=dest_language).text


def translate_dict(data, dest_language):
    """Convert dict values while maintaining key languages."""
    translated = {}
    for key, value in data.items():
        if isinstance(value, dict):
            translated[key] = translate_dict(value, dest_language)
        else:
            translated[key] = translate_text(value, dest_language)
    return translated


# Generate translations for each target language
for language_name, language_code in languages.items():
    if language_code == "en":  # Skip English
        continue
    print(f"Processing {language_name} ({language_code}.json)")  # noqa: T201
    translated_data = translate_dict(en_data, language_code)
    with open(f"{language_code}.json", "w", encoding="utf-8") as file:
        json.dump(translated_data, file, ensure_ascii=False, indent=4)

print("Translation completed.")  # noqa: T201
